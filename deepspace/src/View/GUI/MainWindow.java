/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View.GUI;

import View.DeepSpaceView;
import controller.Controller;
import java.util.ArrayList;
import deepspace.GameState;
import javax.swing.JOptionPane;

/**
 *
 * @author moises
 */
public class MainWindow extends javax.swing.JFrame implements DeepSpaceView {
    private static MainWindow instance=null;
    private String appName;
    
    private SpaceStationView stationView;
    private EnemyView enemyView;

    //hay mas datos miembro
    public static MainWindow getInstance () {
        if (instance == null) {
            instance = new MainWindow();
        }
        return instance;
    }
    /**
     * Creates new form MainWindow
     */
    private MainWindow() {
        initComponents();
        appName = "DeepSpace";
        setTitle(appName);
        
        stationView=new SpaceStationView();
        enemyView=new EnemyView();
        
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                Controller.getInstance().finish(0);
            }
        });

    }

    public String getAppName() {
        return appName;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        stationpanel = new javax.swing.JPanel();
        enemypanel = new javax.swing.JPanel();
        combatir = new javax.swing.JButton();
        nextturn = new javax.swing.JButton();
        exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        stationpanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Station"));
        stationpanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING));

        enemypanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Enemy"));

        combatir.setText("COMBAT");
        combatir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combatirActionPerformed(evt);
            }
        });

        nextturn.setText("Next Turn");
        nextturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextturnActionPerformed(evt);
            }
        });

        exit.setText("EXIT");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(stationpanel, javax.swing.GroupLayout.PREFERRED_SIZE, 684, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(nextturn)
                        .addGap(114, 114, 114)
                        .addComponent(exit))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enemypanel, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(combatir)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(stationpanel, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(27, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(enemypanel, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(combatir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nextturn)
                            .addComponent(exit))
                        .addGap(27, 27, 27))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combatirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combatirActionPerformed
        // TODO add your handling code here:
        Controller.getInstance().combat();
        updateView();
        revalidate();
    }//GEN-LAST:event_combatirActionPerformed

    private void nextturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextturnActionPerformed
        // TODO add your handling code here:
        Controller.getInstance().nextTurn();
        updateView();
        revalidate();
    }//GEN-LAST:event_nextturnActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        Controller.getInstance().finish(0);
        
    }//GEN-LAST:event_exitActionPerformed


    @Override
    public void updateView(){
        stationView.setSpaceStation(Controller.getInstance().getUIversion().getCurrentStation());
        stationpanel.add(stationView);
        enemyView.setEnemy(Controller.getInstance().getUIversion().getCurrentEnemy());
        enemypanel.add(enemyView);
        
        GameState state=Controller.getInstance().getState();
        if(state==GameState.INIT){
           combatir.setEnabled(true);
           nextturn.setEnabled(false);
        }
        if(state==GameState.BEFORECOMBAT){
           combatir.setEnabled(true);
           nextturn.setEnabled(false);
        }
        if(state==GameState.AFTERCOMBAT){
           combatir.setEnabled(false);
           nextturn.setEnabled(true); 
        }
        repaint();
        
    }
    
    @Override
    public void showView(){
        this.setVisible(true);
    }
    // Inputs
    @Override
    public ArrayList<String> readNamePlayers(){
        NamesCapture namesCapt = new NamesCapture(this);
        return namesCapt.readNamePlayers();
    }
    // Outputs
    @Override
    public boolean confirmExitMessage(){
        return (JOptionPane.showConfirmDialog(this, "Do you want to leave the game?", getAppName(), JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION);
    }
    
    @Override
    public void nextTurnNotAllowedMessage(){
        JOptionPane.showMessageDialog(this,"You cannot advance your turn, you have not fulfilled your punishment");
    }
    
    @Override
    public void lostCombatMessage(){
        JOptionPane.showMessageDialog(this, "You have LOST the combat. \tFulfill your punishment.");
    }
    
    @Override
    public void escapeMessage(){
        JOptionPane.showMessageDialog(this, "You have escape.");
    }
    
    @Override
    public void wonCombatMessage(){
        JOptionPane.showMessageDialog(this,"You have WON the combat. \tEnjoy your Loot.");
    }
    
    @Override
    public void wonGameMessage(){
        JOptionPane.showMessageDialog(this,"YOU HAVE WON THE GAME");
    }
    
    @Override
    public void conversionMessage(){
        if(Controller.getInstance().getUIversion().getCurrentEnemy().getLoot().isGetEfficient()){
            JOptionPane.showMessageDialog(this, "You have WON the combat. \nYou also became an EFFICIENT STATION. \nEnjoy your Loot.", getAppName(), JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            JOptionPane.showMessageDialog(this, "You have WON the combat. \nYou also became a Space City. \nEnjoy your Loot.", getAppName(), JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    @Override
    public void noCombatMessage(){
        JOptionPane.showConfirmDialog(this,"You canÂ´t combat in this moment");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton combatir;
    private javax.swing.JPanel enemypanel;
    private javax.swing.JButton exit;
    private javax.swing.JButton nextturn;
    private javax.swing.JPanel stationpanel;
    // End of variables declaration//GEN-END:variables
}
