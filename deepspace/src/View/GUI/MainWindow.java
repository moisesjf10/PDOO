/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View.GUI;

import View.DeepSpaceView;
import controller.Controller;
import deepspace.HangarToUI;
import java.util.ArrayList;
import deepspace.ShieldToUI;
import deepspace.LootToUI;
import deepspace.SpaceStationToUI;

/**
 *
 * @author moises
 */
public class MainWindow extends javax.swing.JFrame implements DeepSpaceView {
    private static MainWindow instance=null;
    private String appName;

    //hay mas datos miembro
    public static MainWindow getInstance () {
        if (instance == null) {
            instance = new MainWindow();
        }
        return instance;
    }
    /**
     * Creates new form MainWindow
     */
    private MainWindow() {
        initComponents();
        //hay que hacer algo mas
        appName = "DeepSpace";
        setTitle(appName);
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                Controller.getInstance().finish(0);
            }
        });

    }

    public String getAppName() {
        return appName;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPruebas = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelPruebas, javax.swing.GroupLayout.PREFERRED_SIZE, 1493, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelPruebas, javax.swing.GroupLayout.PREFERRED_SIZE, 929, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
                
            }
        });


    }

    @Override
    public void updateView(){
        
        SpaceStationToUI station = Controller.getInstance().dameEstacion();
        SpaceStationView  vista = new SpaceStationView();
        vista.setSpaceStation(station);
        System.out.println(station.toString());
        panelPruebas.add(vista);
        repaint();
        revalidate();
        
        /*HangarToUI h = Controller.getInstance().dameHangar();
        HangarView  vista = new HangarView();
        vista.setHangar(h);
        System.out.println(h.toString());
        panelPruebas.add(vista);
        repaint();
        revalidate();*/
        
    }
    @Override
    public void showView(){
        this.setVisible(true);
    }
    // Inputs
    @Override
    public ArrayList<String> readNamePlayers(){
        NamesCapture namesCapt = new NamesCapture(this);
        return namesCapt.readNamePlayers();
    }
    // Outputs
    public boolean confirmExitMessage(){
           return true;
    }
    public void nextTurnNotAllowedMessage(){

    }
    public void lostCombatMessage(){

    }
    public void escapeMessage(){

    }
    public void wonCombatMessage(){

    }
    public void wonGameMessage(){

    }
    public void conversionMessage(){

    }
    public void noCombatMessage(){

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panelPruebas;
    // End of variables declaration//GEN-END:variables
}
